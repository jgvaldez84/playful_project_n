{"version":3,"sources":["Sidebar.js","Main.js","App.js","reportWebVitals.js","index.js"],"names":["Sidebar","notes","onAddNote","onDeleteNote","activeNote","setActiveNote","sortedNotes","sort","a","b","lastModified","className","onClick","map","note","id","title","body","substr","Date","toLocaleDateString","hour","minute","Main","onUpdateNote","onEditField","key","value","now","type","onChange","e","target","autoFocus","placeholder","App","useState","setNotes","newNote","uuid","idToDelete","filter","find","updatedNote","updatedNotesArray","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uOAwCeA,EAxCC,SAAC,GAMV,IALLC,EAKI,EALJA,MACAC,EAII,EAJJA,UACAC,EAGI,EAHJA,aACAC,EAEI,EAFJA,WACAC,EACI,EADJA,cAEQC,EAAcL,EAAMM,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAEC,aAAeF,EAAEE,gBAC9D,OACE,sBAAKC,UAAU,cAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,uCACA,wBAAQC,QAASV,EAAjB,oBAEF,qBAAKS,UAAU,oBAAf,SACGL,EAAYO,KAAI,SAACC,GAAD,OACf,sBACEH,UAAS,2BAAsBG,EAAKC,KAAOX,GAAc,UACzDQ,QAAS,kBAAMP,EAAcS,EAAKC,KAFpC,UAIE,sBAAKJ,UAAU,qBAAf,UACE,iCAASG,EAAKE,QACd,wBAAQJ,QAAS,kBAAMT,EAAaW,EAAKC,KAAzC,uBAEF,4BAAID,EAAKG,MAAQH,EAAKG,KAAKC,OAAO,EAAG,KAAO,QAC5C,wBAAOP,UAAU,YAAjB,UACG,IADH,gBAEgB,IACb,IAAIQ,KAAKL,EAAKJ,cAAcU,mBAAmB,QAAS,CACvDC,KAAM,UACNC,OAAQ,2B,sBCMTC,EAlCF,SAAC,GAAkC,IAAhCnB,EAA+B,EAA/BA,WAAYoB,EAAmB,EAAnBA,aACpBC,EAAc,SAACC,EAAKC,GAAW,IAAD,EAChCH,EAAa,2BACJpB,GADG,uBAEPsB,EAAMC,GAFC,6BAGMR,KAAKS,OAHX,MAMhB,OAAIxB,EAEF,qBAAKO,UAAU,WAAf,SACE,sBAAKA,UAAU,qBAAf,UACE,uBACEkB,KAAK,OACLd,GAAG,QACHY,MAAOvB,EAAWY,MAClBc,SAAU,SAACC,GAAD,OAAON,EAAY,QAASM,EAAEC,OAAOL,QAC/CM,WAAS,IAEX,0BACElB,GAAG,OACHmB,YAAY,uBACZP,MAAOvB,EAAWa,KAClBa,SAAU,SAACC,GAAD,OAAON,EAAY,OAAQM,EAAEC,OAAOL,UAEhD,sBAAKhB,UAAU,wBAAf,UACE,oBAAIA,UAAU,gBAAd,SAA+BP,EAAWY,QAC1C,cAAC,IAAD,CAAeL,UAAU,mBAAzB,SAA6CP,EAAWa,eAnBzC,qBAAKN,UAAU,iBAAf,+BC+CVwB,MAjDf,WAEE,MAA0BC,mBAAS,IAAnC,mBAAOnC,EAAP,KAAcoC,EAAd,KACA,EAAoCD,oBAAS,GAA7C,mBAAOhC,EAAP,KAAmBC,EAAnB,KA+BA,OACE,sBAAKM,UAAU,MAAf,UACE,cAAC,EAAD,CACAV,MAAOA,EACNC,UAjCa,WAChB,IAAMoC,EAAU,CACdvB,GAAIwB,cACJvB,MAAO,gBACPC,KAAM,GACNP,aAAcS,KAAKS,OAGrBS,EAAS,CAACC,GAAF,mBAAcrC,MA0BnBE,aAvBgB,SAACqC,GACpBH,EAASpC,EAAMwC,QAAO,SAAC3B,GAAD,OAAUA,EAAKC,KAAOyB,OAuBzCpC,WAAaA,EACbC,cAAgBA,IAEjB,cAAC,EAAD,CAAMD,WAtBCH,EAAMyC,MAAK,SAAC5B,GAAD,OAAUA,EAAKC,KAAOX,KAsBLoB,aAnBhB,SAACmB,GACpB,IAAMC,EAAoB3C,EAAMY,KAAI,SAACC,GACnC,OAAGA,EAAKC,KAAOX,EACNuC,EAEF7B,KAEXuB,EAASO,UC3BEC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.5aca205f.chunk.js","sourcesContent":["const Sidebar = ({\n  notes,\n  onAddNote,\n  onDeleteNote,\n  activeNote,\n  setActiveNote,\n}) => {\n    const sortedNotes = notes.sort((a, b) => b.lastModified - a.lastModified);\n  return (\n    <div className=\"app-sidebar\">\n      <div className=\"app-sidebar-header\">\n        <h1>Notes</h1>\n        <button onClick={onAddNote}>Add</button>\n      </div>\n      <div className=\"app-sidebar-notes\">\n        {sortedNotes.map((note) => (\n          <div\n            className={`app-sidebar-note ${note.id === activeNote && \"active\"}`}\n            onClick={() => setActiveNote(note.id)}\n          >\n            <div className=\"sidebar-note-title\">\n              <strong>{note.title}</strong>\n              <button onClick={() => onDeleteNote(note.id)}>Delete</button>\n            </div>\n            <p>{note.body && note.body.substr(0, 100) + \"...\"}</p>\n            <small className=\"note-data\">\n              {\" \"}\n              Last modified{\" \"}\n              {new Date(note.lastModified).toLocaleDateString(\"en-US\", {\n                hour: \"2-digit\",\n                minute: \"2-digit\",\n              })}\n            </small>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Sidebar;\n","import ReactMarkdown from \"react-markdown\";\n\nconst Main = ({ activeNote, onUpdateNote }) => {\n  const onEditField = (key, value) => {\n      onUpdateNote({\n            ...activeNote,\n          [key]: value,\n          lastModified: Date.now()\n      })\n  };\n  if(!activeNote) return <div className=\"no-active-note\">No note selected</div>\n  return (\n    <div className=\"app-main\">\n      <div className=\"app-main-note-edit\">\n        <input\n          type=\"text\"\n          id=\"title\"\n          value={activeNote.title}\n          onChange={(e) => onEditField(\"title\", e.target.value)}\n          autoFocus\n        />\n        <textarea\n          id=\"body\"\n          placeholder=\"write your note here\"\n          value={activeNote.body}\n          onChange={(e) => onEditField(\"body\", e.target.value)}\n        />\n        <div className=\"app-main-note-preview\">\n          <h1 className=\"preview-title\">{activeNote.title}</h1>\n          <ReactMarkdown className=\"markdown-preview\">{activeNote.body}</ReactMarkdown>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Main;\n","import './App.css';\nimport { useState } from 'react';\nimport { v4 as uuid } from \"uuid\";\nimport Sidebar from './Sidebar';\nimport Main from './Main';\n\n\n\nfunction App() {\n\n  const [notes, setNotes] = useState([]);\n  const [activeNote, setActiveNote] = useState(false);\n\n  const onAddNote = () => {\n    const newNote = {\n      id: uuid(),\n      title: \"untitled note\",\n      body: \"\",\n      lastModified: Date.now()\n    };\n\n    setNotes([newNote, ...notes]);\n  };\n\n  const onDeleteNote = (idToDelete) => {\n    setNotes(notes.filter((note) => note.id !== idToDelete)\n    )};\n\n    const getActiveNote = () => {\n      return notes.find((note) => note.id === activeNote);\n    }\n\n    const onUpdateNote = (updatedNote) => {\n      const updatedNotesArray = notes.map((note)=> {\n        if(note.id === activeNote){\n          return updatedNote;\n        }\n        return note;\n      });\n    setNotes(updatedNotesArray)\n    };\n\n  return (\n    <div className=\"App\">\n      <Sidebar \n      notes={notes}\n       onAddNote={onAddNote} \n       onDeleteNote={onDeleteNote}\n       activeNote ={activeNote}\n       setActiveNote ={setActiveNote}\n       />\n      <Main activeNote={getActiveNote()} onUpdateNote={onUpdateNote} />\n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}